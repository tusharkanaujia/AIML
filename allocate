


    -- Step 1: Combine TPA and TPL into one temp table
    IF OBJECT_ID('tempdb..#BusinessBase') IS NOT NULL DROP TABLE #BusinessBase;

    SELECT 
        ISIN,
        LevelProd10, LevelProd9, LevelProd8, LevelProd7, LevelProd6PR,
        LevelProd5PG, LevelProd4SD, LevelProd3SB, LevelProd2BG,
        GBPIFRSBalanceSheetAmount,
        ABS(GBPIFRSBalanceSheetAmount) AS AbsAmount
    INTO #BusinessBase
    FROM (
        SELECT * FROM #tpa
        UNION ALL
        SELECT * FROM #tpl
    ) AS Combined;

    -- Step 2: Add allocation level name and value (starting from level 10 up to level 2)
    IF OBJECT_ID('tempdb..#Labeled') IS NOT NULL DROP TABLE #Labeled;

    SELECT *,
        CASE 
            WHEN LevelProd10 IS NOT NULL THEN 'LevelProd10'
            WHEN LevelProd9  IS NOT NULL THEN 'LevelProd9'
            WHEN LevelProd8  IS NOT NULL THEN 'LevelProd8'
            WHEN LevelProd7  IS NOT NULL THEN 'LevelProd7'
            WHEN LevelProd6PR IS NOT NULL THEN 'LevelProd6PR'
            WHEN LevelProd5PG IS NOT NULL THEN 'LevelProd5PG'
            WHEN LevelProd4SD IS NOT NULL THEN 'LevelProd4SD'
            WHEN LevelProd3SB IS NOT NULL THEN 'LevelProd3SB'
            WHEN LevelProd2BG IS NOT NULL THEN 'LevelProd2BG'
            ELSE 'UNKNOWN'
        END AS AllocationLevelName,

        COALESCE(
            LevelProd10, LevelProd9, LevelProd8, LevelProd7, LevelProd6PR,
            LevelProd5PG, LevelProd4SD, LevelProd3SB, LevelProd2BG, 'UNKNOWN'
        ) AS AllocationLevelValue
    INTO #Labeled
    FROM #BusinessBase;

    -- Step 3: Total abs by ISIN
    IF OBJECT_ID('tempdb..#ISINTotal') IS NOT NULL DROP TABLE #ISINTotal;
    SELECT ISIN, SUM(AbsAmount) AS TotalAbsAmount
    INTO #ISINTotal
    FROM #Labeled
    GROUP BY ISIN;

    -- Step 4: Grouped hierarchy amount
    IF OBJECT_ID('tempdb..#Grouped') IS NOT NULL DROP TABLE #Grouped;
    SELECT 
        ISIN,
        AllocationLevelName,
        AllocationLevelValue,
        SUM(AbsAmount) AS GroupAbsAmount
    INTO #Grouped
    FROM #Labeled
    GROUP BY ISIN, AllocationLevelName, AllocationLevelValue;

    -- Step 5: Final allocation with AllocationType tagging
    IF OBJECT_ID('tempdb..#Allocated') IS NOT NULL DROP TABLE #Allocated;
    SELECT 
        g.ISIN,
        g.AllocationLevelName,
        g.AllocationLevelValue,
        g.GroupAbsAmount,
        t.TotalAbsAmount,
        c.GBPIFRSBalanceSheetAmount AS NettingAmount,
        CASE 
            WHEN t.TotalAbsAmount = 0 THEN 0
            ELSE ROUND(g.GroupAbsAmount * c.GBPIFRSBalanceSheetAmount / t.TotalAbsAmount, 2)
        END AS AllocatedAmount,
        CASE 
            WHEN t.TotalAbsAmount = 0 THEN 0
            ELSE ROUND(g.GroupAbsAmount * 100.0 / t.TotalAbsAmount, 2)
        END AS PercentOfTotal,
        -- AllocationType tagging logic
        CASE 
            WHEN g.AllocationLevelName IN ('LevelProd10', 'LevelProd9', 'LevelProd8', 'LevelProd7', 'LevelProd6PR') THEN 'Business Diversity'
            WHEN g.AllocationLevelName IN ('LevelProd5PG', 'LevelProd4SD', 'LevelProd3SB', 'LevelProd2BG') THEN 'Business Invest'
            ELSE 'Unclassified'
        END AS AllocationType
    INTO #Allocated
    FROM #Grouped g
    JOIN #ISINTotal t ON g.ISIN = t.ISIN
    JOIN #cen c ON g.ISIN = c.ISIN;



		-- Final output: ISIN, full hierarchy, allocated amount
SELECT 
    l.ISIN,
    l.LevelProd10, l.LevelProd9, l.LevelProd8, l.LevelProd7, l.LevelProd6PR,
    l.LevelProd5PG, l.LevelProd4SD, l.LevelProd3SB, l.LevelProd2BG,
    a.AllocatedAmount
FROM #Allocated a
JOIN #Labeled l
    ON a.ISIN = l.ISIN 
   AND a.AllocationLevelName = 
        CASE 
            WHEN l.LevelProd10 IS NOT NULL THEN 'LevelProd10'
            WHEN l.LevelProd9  IS NOT NULL THEN 'LevelProd9'
            WHEN l.LevelProd8  IS NOT NULL THEN 'LevelProd8'
            WHEN l.LevelProd7  IS NOT NULL THEN 'LevelProd7'
            WHEN l.LevelProd6PR IS NOT NULL THEN 'LevelProd6PR'
            WHEN l.LevelProd5PG IS NOT NULL THEN 'LevelProd5PG'
            WHEN l.LevelProd4SD IS NOT NULL THEN 'LevelProd4SD'
            WHEN l.LevelProd3SB IS NOT NULL THEN 'LevelProd3SB'
            WHEN l.LevelProd2BG IS NOT NULL THEN 'LevelProd2BG'
            ELSE 'UNKNOWN'
        END
   AND a.AllocationLevelValue = COALESCE(
            l.LevelProd10, l.LevelProd9, l.LevelProd8, l.LevelProd7, l.LevelProd6PR,
            l.LevelProd5PG, l.LevelProd4SD, l.LevelProd3SB, l.LevelProd2BG, 'UNKNOWN'
        )
ORDER BY l.ISIN, l.LevelProd10, l.LevelProd9, l.LevelProd8, l.LevelProd7,
         l.LevelProd6PR, l.LevelProd5PG, l.LevelProd4SD, l.LevelProd3SB, l.LevelProd2BG;
